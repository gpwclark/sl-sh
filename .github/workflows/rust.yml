name: Rust

on:
  push:
    branches: [ master, gh-pages-test ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
          cargo version
          rustc --version
          cargo build --release --verbose
          cp ./target/release/sl-sh .
          strip sl-sh
    - name: Deploy Docs
      env:
          DOC_DEPLOY_KEY: ${{ secrets.DOC_DEPLOY_KEY }}
      run: |
          function log() {
            echo -e "\033[33;7m$1\033[0m $2"
          }
          function elog() {
            echo -e "\033[31;7m$1\033[0m $2"
          }
          if [ -z "$DOC_DEPLOY_KEY" ]
          then
            log "No deploy key is set to update docs on gh-pages branch."
            log "To fix this generate a ssh keypair (ie 'ssh-keygen -t ed25519')."
            log "Install the public key as a deploy key in your project with"
            log "write access and install the private key as a secret in the"
            log "git repo with name 'DOC_DEPLOY_KEY'."
            exit 0
          fi
          log "> Docs started"
          eval `ssh-agent -t 60 -s`
          echo "$DOC_DEPLOY_KEY" | ssh-add -
          pushd docs
          log "Build docs"
          PATH="${PATH}:../target/release/" ../sl-sh docify.lisp
          if [[ $? != "0" ]]; then
            elog "Error and/or uncategorized forms found, not pushing. Please edit appropriate"
            elog "docstrings printed as hashmap literals above and or errors. Run"
            elog "$ cd docs && sl-sh docify.lisp to get started."
            exit 1
          fi

          if [[ ! -f pages/mydoc/mydoc_api.md ]]; then
            elog "pages/mydoc/mydoc_api.md file was not generated, docs failed to build."
            exit 1
          fi

          log "Push docs"
          git config --global user.email "docs@sl-sh.example.com"
          git config --global user.name "Doc CI"
          REMOTE="$(git config --get remote.origin.url | sed 's#http.*com/#git@github.com:#g')"
          rm -rf .git
          if [ ! -d ".git" ]; then
             git init
          fi
          git checkout -b gh-pages
          git remote add origin ${REMOTE}
          git add --all && git commit -m "Build $(date)"
          git push -u -f origin gh-pages
          rm -rf .git
          popd
          log "< Docs finished"
    - name: Upload linux binary
      uses: actions/upload-artifact@v1
      with:
        name: linux-sl-sh
        path: ./sl-sh
