#!/bin/bash

function log() {
	echo -e "\033[33;7m$1\033[0m $2"
}

function elog() {
	echo -e "\033[31;7m$1\033[0m $2"
}

log "> Docs Hook started"

BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`

## TODO find git commands to list filenames of files that appear under
# git diff OR git dc...
# need to make sure nothing has been touched in the docs/ directory
#before a push?
pushd docs
if [[ $? != "0" ]]; then
	elog "docs dir not found, where are the docs? Aborting!"
	popd
	exit 1
fi

if [[ ! -z $(git diff --dirstat .) ]]; then
	elog "docs directory's working tree has been modified, please resolve"
	elog "said modifications and try again."
	popd
	exit 1
fi

if [[ ${BRANCH_NAME} != "master" && ${BRANCH_NAME} != "remotes/origin/master" ]]; then
	log "Not pushing master branch, not building docs."
else
	log "Verify we have an up to date release build to generate the docs with"
	cargo build --release

	log "Build docs"
	../target/release/sl-sh docify.lisp index.markdown :lang
	if [[ $? != "0" ]]; then
		elog "Error and/or uncategorized forms found, not pushing. Please edit appropriate"
		elog "docstrings printed as hashmap literals above and/or errors. Run"
		elog "$ cd docs && sl-sh docify.lisp index.markdown :lang to get started."
		exit 1;
	fi

	log "Push docs"

	REMOTE=$(git config --get remote.origin.url)

	rm -rf .git

	if [ ! -d ".git" ]; then
	   git init
	fi

	git checkout -b gh-pages

	git remote add origin ${REMOTE}
	git add --all && git commit -m "Build $(date)"
	git push -u -f origin gh-pages

	rm -rf .git
fi

popd docs

log "< Docs Hook finished"


